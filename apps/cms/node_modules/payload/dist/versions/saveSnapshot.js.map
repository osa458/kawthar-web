{"version":3,"sources":["../../src/versions/saveSnapshot.ts"],"sourcesContent":["import type { SanitizedCollectionConfig } from '../collections/config/types.js'\nimport type { SanitizedGlobalConfig } from '../globals/config/types.js'\nimport type { Payload, TypeWithVersion } from '../index.js'\nimport type { JsonObject, PayloadRequest, SelectType } from '../types/index.js'\n\nimport { deepCopyObjectSimple } from '../index.js'\nimport { getQueryDraftsSelect } from './drafts/getQueryDraftsSelect.js'\n\ntype Args<T extends JsonObject = JsonObject> = {\n  autosave?: boolean\n  collection?: SanitizedCollectionConfig\n  data?: T\n  global?: SanitizedGlobalConfig\n  id?: number | string\n  payload: Payload\n  publishSpecificLocale?: string\n  req?: PayloadRequest\n  select?: SelectType\n}\n\nexport const saveSnapshot = async <T extends JsonObject = JsonObject>({\n  id,\n  autosave,\n  collection,\n  data,\n  global,\n  payload,\n  publishSpecificLocale,\n  req,\n  select,\n}: Args<T>): Promise<Omit<TypeWithVersion<T>, 'parent'> | TypeWithVersion<T> | undefined> => {\n  const docData: {\n    _status?: 'draft'\n  } & T = deepCopyObjectSimple<T>(data || ({} as T))\n  docData._status = 'draft'\n\n  if (docData._id) {\n    delete docData._id\n  }\n\n  const snapshotDate = new Date().toISOString()\n\n  const sharedCreateVersionArgs = {\n    autosave: Boolean(autosave),\n    createdAt: snapshotDate,\n    publishedLocale: publishSpecificLocale || undefined,\n    req,\n    returning: false,\n    select: getQueryDraftsSelect({ select }),\n    updatedAt: snapshotDate,\n    versionData: docData,\n  }\n\n  if (collection && id) {\n    return payload.db.createVersion<T>({\n      ...sharedCreateVersionArgs,\n      collectionSlug: collection.slug,\n      parent: id,\n      snapshot: true,\n    })\n  }\n  if (global) {\n    return payload.db.createGlobalVersion<T>({\n      ...sharedCreateVersionArgs,\n      globalSlug: global.slug,\n      snapshot: true,\n    })\n  }\n}\n"],"names":["deepCopyObjectSimple","getQueryDraftsSelect","saveSnapshot","id","autosave","collection","data","global","payload","publishSpecificLocale","req","select","docData","_status","_id","snapshotDate","Date","toISOString","sharedCreateVersionArgs","Boolean","createdAt","publishedLocale","undefined","returning","updatedAt","versionData","db","createVersion","collectionSlug","slug","parent","snapshot","createGlobalVersion","globalSlug"],"mappings":"AAKA,SAASA,oBAAoB,QAAQ,cAAa;AAClD,SAASC,oBAAoB,QAAQ,mCAAkC;AAcvE,OAAO,MAAMC,eAAe,OAA0C,EACpEC,EAAE,EACFC,QAAQ,EACRC,UAAU,EACVC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,qBAAqB,EACrBC,GAAG,EACHC,MAAM,EACE;IACR,MAAMC,UAEEZ,qBAAwBM,QAAS,CAAC;IAC1CM,QAAQC,OAAO,GAAG;IAElB,IAAID,QAAQE,GAAG,EAAE;QACf,OAAOF,QAAQE,GAAG;IACpB;IAEA,MAAMC,eAAe,IAAIC,OAAOC,WAAW;IAE3C,MAAMC,0BAA0B;QAC9Bd,UAAUe,QAAQf;QAClBgB,WAAWL;QACXM,iBAAiBZ,yBAAyBa;QAC1CZ;QACAa,WAAW;QACXZ,QAAQV,qBAAqB;YAAEU;QAAO;QACtCa,WAAWT;QACXU,aAAab;IACf;IAEA,IAAIP,cAAcF,IAAI;QACpB,OAAOK,QAAQkB,EAAE,CAACC,aAAa,CAAI;YACjC,GAAGT,uBAAuB;YAC1BU,gBAAgBvB,WAAWwB,IAAI;YAC/BC,QAAQ3B;YACR4B,UAAU;QACZ;IACF;IACA,IAAIxB,QAAQ;QACV,OAAOC,QAAQkB,EAAE,CAACM,mBAAmB,CAAI;YACvC,GAAGd,uBAAuB;YAC1Be,YAAY1B,OAAOsB,IAAI;YACvBE,UAAU;QACZ;IACF;AACF,EAAC"}