{"version":3,"sources":["../../src/utilities/getFieldPermissions.spec.ts"],"sourcesContent":["import type { SanitizedDocumentPermissions } from '../auth/types.js'\n\nimport { getFieldPermissions } from './getFieldPermissions.js'\n\ndescribe('getFieldPermissions with collection fallback', () => {\n  const mockField = {\n    name: 'testField',\n    type: 'text' as const,\n  }\n\n  describe('fallback to collection permissions', () => {\n    it('should enable read-only mode when field permissions are missing but collection has read access', () => {\n      const fieldPermissions = {} // Empty/sanitized field permissions\n      const collectionPermissions: SanitizedDocumentPermissions = {\n        read: true,\n        fields: {},\n      }\n\n      const result = getFieldPermissions({\n        field: mockField,\n        operation: 'update',\n        parentName: '',\n        permissions: fieldPermissions,\n        collectionPermissions,\n      })\n\n      expect(result.read).toBe(true)\n      expect(result.operation).toBe(false) // Should be read-only\n      expect(result.permissions).toEqual({ read: true })\n    })\n\n    it('should respect existing field permissions when they exist', () => {\n      const fieldPermissions = true // All permissions are true\n      const collectionPermissions: SanitizedDocumentPermissions = {\n        read: true,\n        fields: {},\n      }\n\n      const result = getFieldPermissions({\n        field: mockField,\n        operation: 'update',\n        parentName: '',\n        permissions: fieldPermissions,\n      })\n\n      expect(result.read).toBe(true)\n      expect(result.operation).toBe(true) // Should have operation permission\n      expect(result.permissions).toBe(true)\n    })\n\n    it('should not provide access when neither field nor collection has read permission', () => {\n      const fieldPermissions = {}\n      const collectionPermissions: SanitizedDocumentPermissions = {\n        // No read permission at collection level\n        fields: {},\n      }\n\n      const result = getFieldPermissions({\n        field: mockField,\n        operation: 'update',\n        parentName: '',\n        permissions: fieldPermissions,\n        collectionPermissions,\n      })\n\n      expect(result.read).toBe(false)\n      expect(result.operation).toBe(false)\n    })\n\n    it('should work without collection permissions (backward compatibility)', () => {\n      const fieldPermissions = true // All permissions\n\n      const result = getFieldPermissions({\n        field: mockField,\n        operation: 'update',\n        parentName: '',\n        permissions: fieldPermissions,\n        // No collectionPermissions provided\n      })\n\n      expect(result.read).toBe(true)\n      expect(result.operation).toBe(true)\n      expect(result.permissions).toBe(true)\n    })\n  })\n})\n"],"names":["getFieldPermissions","describe","mockField","name","type","it","fieldPermissions","collectionPermissions","read","fields","result","field","operation","parentName","permissions","expect","toBe","toEqual"],"mappings":"AAEA,SAASA,mBAAmB,QAAQ,2BAA0B;AAE9DC,SAAS,gDAAgD;IACvD,MAAMC,YAAY;QAChBC,MAAM;QACNC,MAAM;IACR;IAEAH,SAAS,sCAAsC;QAC7CI,GAAG,kGAAkG;YACnG,MAAMC,mBAAmB,CAAC,EAAE,oCAAoC;;YAChE,MAAMC,wBAAsD;gBAC1DC,MAAM;gBACNC,QAAQ,CAAC;YACX;YAEA,MAAMC,SAASV,oBAAoB;gBACjCW,OAAOT;gBACPU,WAAW;gBACXC,YAAY;gBACZC,aAAaR;gBACbC;YACF;YAEAQ,OAAOL,OAAOF,IAAI,EAAEQ,IAAI,CAAC;YACzBD,OAAOL,OAAOE,SAAS,EAAEI,IAAI,CAAC,OAAO,sBAAsB;;YAC3DD,OAAOL,OAAOI,WAAW,EAAEG,OAAO,CAAC;gBAAET,MAAM;YAAK;QAClD;QAEAH,GAAG,6DAA6D;YAC9D,MAAMC,mBAAmB,KAAK,2BAA2B;;YACzD,MAAMC,wBAAsD;gBAC1DC,MAAM;gBACNC,QAAQ,CAAC;YACX;YAEA,MAAMC,SAASV,oBAAoB;gBACjCW,OAAOT;gBACPU,WAAW;gBACXC,YAAY;gBACZC,aAAaR;YACf;YAEAS,OAAOL,OAAOF,IAAI,EAAEQ,IAAI,CAAC;YACzBD,OAAOL,OAAOE,SAAS,EAAEI,IAAI,CAAC,MAAM,mCAAmC;;YACvED,OAAOL,OAAOI,WAAW,EAAEE,IAAI,CAAC;QAClC;QAEAX,GAAG,mFAAmF;YACpF,MAAMC,mBAAmB,CAAC;YAC1B,MAAMC,wBAAsD;gBAC1D,yCAAyC;gBACzCE,QAAQ,CAAC;YACX;YAEA,MAAMC,SAASV,oBAAoB;gBACjCW,OAAOT;gBACPU,WAAW;gBACXC,YAAY;gBACZC,aAAaR;gBACbC;YACF;YAEAQ,OAAOL,OAAOF,IAAI,EAAEQ,IAAI,CAAC;YACzBD,OAAOL,OAAOE,SAAS,EAAEI,IAAI,CAAC;QAChC;QAEAX,GAAG,uEAAuE;YACxE,MAAMC,mBAAmB,KAAK,kBAAkB;;YAEhD,MAAMI,SAASV,oBAAoB;gBACjCW,OAAOT;gBACPU,WAAW;gBACXC,YAAY;gBACZC,aAAaR;YAEf;YAEAS,OAAOL,OAAOF,IAAI,EAAEQ,IAAI,CAAC;YACzBD,OAAOL,OAAOE,SAAS,EAAEI,IAAI,CAAC;YAC9BD,OAAOL,OAAOI,WAAW,EAAEE,IAAI,CAAC;QAClC;IACF;AACF"}