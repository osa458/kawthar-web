{"version":3,"file":"RelationshipComponent.js","names":["useLexicalComposerContext","useLexicalEditable","getTranslation","Button","useConfig","usePayloadAPI","useTranslation","$getNodeByKey","React","useCallback","useReducer","useRef","useState","useLexicalDocumentDrawer","INSERT_RELATIONSHIP_WITH_DRAWER_COMMAND","initialParams","depth","RelationshipComponent","props","className","baseClass","data","relationTo","value","nodeKey","Error","relationshipElemRef","editor","isEditable","config","routes","api","serverURL","getEntityConfig","relatedCollection","collectionSlug","i18n","t","cacheBust","dispatchCacheBust","state","setParams","slug","closeDocumentDrawer","DocumentDrawer","DocumentDrawerToggler","id","removeRelationship","update","remove","updateRelationship","_jsxs","contentEditable","ref","_jsx","label","labels","singular","admin","useAsTitle","buttonStyle","disabled","el","icon","onClick","dispatchCommand","replace","round","tooltip","e","preventDefault","onSave"],"sources":["../../../../../src/features/relationship/client/components/RelationshipComponent.tsx"],"sourcesContent":["'use client'\nimport type { ElementFormatType } from 'lexical'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext.js'\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable'\nimport { getTranslation } from '@payloadcms/translations'\nimport { Button, useConfig, usePayloadAPI, useTranslation } from '@payloadcms/ui'\nimport { $getNodeByKey } from 'lexical'\nimport React, { useCallback, useReducer, useRef, useState } from 'react'\n\nimport type { RelationshipData } from '../../server/nodes/RelationshipNode.js'\n\nimport { useLexicalDocumentDrawer } from '../../../../utilities/fieldsDrawer/useLexicalDocumentDrawer.js'\nimport './index.scss'\nimport { INSERT_RELATIONSHIP_WITH_DRAWER_COMMAND } from '../drawer/commands.js'\n\nconst initialParams = {\n  depth: 0,\n}\n\ntype Props = {\n  className: string\n  data: RelationshipData\n  format?: ElementFormatType\n  nodeKey?: string\n}\n\nexport const RelationshipComponent: React.FC<Props> = (props) => {\n  const {\n    className: baseClass,\n    data: { relationTo, value },\n    nodeKey,\n  } = props\n\n  if (typeof value === 'object') {\n    throw new Error(\n      'Relationship value should be a string or number. The Lexical Relationship component should not receive the populated value object.',\n    )\n  }\n\n  const relationshipElemRef = useRef<HTMLDivElement | null>(null)\n\n  const [editor] = useLexicalComposerContext()\n  const isEditable = useLexicalEditable()\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n    getEntityConfig,\n  } = useConfig()\n\n  const [relatedCollection] = useState(() => getEntityConfig({ collectionSlug: relationTo }))\n\n  const { i18n, t } = useTranslation()\n  const [cacheBust, dispatchCacheBust] = useReducer((state) => state + 1, 0)\n  const [{ data }, { setParams }] = usePayloadAPI(\n    `${serverURL}${api}/${relatedCollection.slug}/${value}`,\n    { initialParams },\n  )\n\n  const { closeDocumentDrawer, DocumentDrawer, DocumentDrawerToggler } = useLexicalDocumentDrawer({\n    id: value,\n    collectionSlug: relatedCollection.slug,\n  })\n\n  const removeRelationship = useCallback(() => {\n    editor.update(() => {\n      $getNodeByKey(nodeKey!)?.remove()\n    })\n  }, [editor, nodeKey])\n\n  const updateRelationship = React.useCallback(() => {\n    setParams({\n      ...initialParams,\n      cacheBust, // do this to get the usePayloadAPI to re-fetch the data even though the URL string hasn't changed\n    })\n\n    closeDocumentDrawer()\n    dispatchCacheBust()\n  }, [cacheBust, setParams, closeDocumentDrawer])\n\n  return (\n    <div className={`${baseClass}__contents`} contentEditable={false} ref={relationshipElemRef}>\n      <div className={`${baseClass}__wrap`}>\n        <p className={`${baseClass}__label`}>\n          {t('fields:labelRelationship', {\n            label: relatedCollection.labels?.singular\n              ? getTranslation(relatedCollection.labels?.singular, i18n)\n              : relatedCollection.slug,\n          })}\n        </p>\n        <DocumentDrawerToggler className={`${baseClass}__doc-drawer-toggler`}>\n          <p className={`${baseClass}__title`}>\n            {data ? data[relatedCollection?.admin?.useAsTitle || 'id'] : value}\n          </p>\n        </DocumentDrawerToggler>\n      </div>\n      {isEditable && (\n        <div className={`${baseClass}__actions`}>\n          <Button\n            buttonStyle=\"icon-label\"\n            className={`${baseClass}__swapButton`}\n            disabled={!isEditable}\n            el=\"button\"\n            icon=\"swap\"\n            onClick={() => {\n              if (nodeKey) {\n                editor.dispatchCommand(INSERT_RELATIONSHIP_WITH_DRAWER_COMMAND, {\n                  replace: { nodeKey },\n                })\n              }\n            }}\n            round\n            tooltip={t('fields:swapRelationship')}\n          />\n          <Button\n            buttonStyle=\"icon-label\"\n            className={`${baseClass}__removeButton`}\n            disabled={!isEditable}\n            icon=\"x\"\n            onClick={(e) => {\n              e.preventDefault()\n              removeRelationship()\n            }}\n            round\n            tooltip={t('fields:removeRelationship')}\n          />\n        </div>\n      )}\n\n      {!!value && <DocumentDrawer onSave={updateRelationship} />}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}