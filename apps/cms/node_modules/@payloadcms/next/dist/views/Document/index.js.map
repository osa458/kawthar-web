{"version":3,"file":"index.js","names":["DocumentInfoProvider","EditDepthProvider","HydrateAuthProvider","LivePreviewProvider","RenderServerComponent","handleLivePreview","handlePreview","isEditing","getIsEditing","buildFormState","notFound","redirect","logError","formatAdminURL","React","DocumentHeader","getPreferences","NotFoundView","getDocPreferences","getDocumentData","getDocumentPermissions","getDocumentView","getIsLocked","getMetaBySegment","getVersions","renderDocumentSlots","generateMetadata","args","renderDocument","disableActions","documentSubViewType","drawerSlug","importMap","initialData","initPageResult","overrideEntityVisibility","params","redirectAfterCreate","redirectAfterDelete","redirectAfterDuplicate","redirectAfterRestore","searchParams","versions","viewType","collectionConfig","docID","idFromArgs","globalConfig","locale","permissions","req","i18n","payload","config","routes","admin","adminRoute","api","apiRoute","serverURL","user","visibleEntities","segments","Array","isArray","collectionSlug","slug","undefined","globalSlug","id","doc","redirectURL","path","encodeURIComponent","Error","isTrashedDoc","Boolean","deletedAt","docPreferences","docPermissions","hasPublishPermission","hasSavePermission","currentEditor","isLocked","lastUpdateTime","entityPreferences","Promise","all","data","collection","operation","hasPublishedDoc","mostRecentVersionIsAutosaved","unpublishedVersionCount","versionCount","state","formState","code","fallbackLocale","readOnly","renderAllFields","schemaPath","skipValidation","documentViewServerProps","routeSegments","collections","find","visibleSlug","globals","formattedParams","URLSearchParams","drafts","append","apiQueryParams","toString","apiURL","View","showHeader","RootViewOverride","components","views","edit","root","Component","shouldAutosave","autosave","validateDraftData","validate","create","depth","draft","documentSlots","Description","clientProps","isLivePreviewEnabled","livePreviewConfig","livePreviewURL","isPreviewEnabled","previewURL","Document","_jsx","initialState","isTrashed","_jsxs","breakpoints","isLivePreviewing","value","editViewType","typeofLivePreviewURL","url","AfterHeader","serverProps","DocumentView","props","RenderedDocument","error","message","err"],"sources":["../../../src/views/Document/index.tsx"],"sourcesContent":["import type {\n  AdminViewServerProps,\n  CollectionPreferences,\n  Data,\n  DocumentViewClientProps,\n  DocumentViewServerProps,\n  DocumentViewServerPropsOnly,\n  EditViewComponent,\n  PayloadComponent,\n  RenderDocumentVersionsProperties,\n} from 'payload'\n\nimport {\n  DocumentInfoProvider,\n  EditDepthProvider,\n  HydrateAuthProvider,\n  LivePreviewProvider,\n} from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { handleLivePreview, handlePreview } from '@payloadcms/ui/rsc'\nimport { isEditing as getIsEditing } from '@payloadcms/ui/shared'\nimport { buildFormState } from '@payloadcms/ui/utilities/buildFormState'\nimport { notFound, redirect } from 'next/navigation.js'\nimport { logError } from 'payload'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nimport type { GenerateEditViewMetadata } from './getMetaBySegment.js'\n\nimport { DocumentHeader } from '../../elements/DocumentHeader/index.js'\nimport { getPreferences } from '../../utilities/getPreferences.js'\nimport { NotFoundView } from '../NotFound/index.js'\nimport { getDocPreferences } from './getDocPreferences.js'\nimport { getDocumentData } from './getDocumentData.js'\nimport { getDocumentPermissions } from './getDocumentPermissions.js'\nimport { getDocumentView } from './getDocumentView.js'\nimport { getIsLocked } from './getIsLocked.js'\nimport { getMetaBySegment } from './getMetaBySegment.js'\nimport { getVersions } from './getVersions.js'\nimport { renderDocumentSlots } from './renderDocumentSlots.js'\n\nexport const generateMetadata: GenerateEditViewMetadata = async (args) => getMetaBySegment(args)\n\nexport type ViewToRender =\n  | EditViewComponent\n  | PayloadComponent<DocumentViewServerProps>\n  | React.FC\n  | React.FC<DocumentViewClientProps>\n\n/**\n * This function is responsible for rendering\n * an Edit Document view on the server for both:\n *  - default document edit views\n *  - on-demand edit views within drawers\n */\nexport const renderDocument = async ({\n  disableActions,\n  documentSubViewType,\n  drawerSlug,\n  importMap,\n  initialData,\n  initPageResult,\n  overrideEntityVisibility,\n  params,\n  redirectAfterCreate,\n  redirectAfterDelete,\n  redirectAfterDuplicate,\n  redirectAfterRestore,\n  searchParams,\n  versions,\n  viewType,\n}: {\n  drawerSlug?: string\n  overrideEntityVisibility?: boolean\n  readonly redirectAfterCreate?: boolean\n  readonly redirectAfterDelete?: boolean\n  readonly redirectAfterDuplicate?: boolean\n  readonly redirectAfterRestore?: boolean\n  versions?: RenderDocumentVersionsProperties\n} & AdminViewServerProps): Promise<{\n  data: Data\n  Document: React.ReactNode\n}> => {\n  const {\n    collectionConfig,\n    docID: idFromArgs,\n    globalConfig,\n    locale,\n    permissions,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: {\n        config,\n        config: {\n          routes: { admin: adminRoute, api: apiRoute },\n          serverURL,\n        },\n      },\n      user,\n    },\n    visibleEntities,\n  } = initPageResult\n\n  const segments = Array.isArray(params?.segments) ? params.segments : []\n  const collectionSlug = collectionConfig?.slug || undefined\n  const globalSlug = globalConfig?.slug || undefined\n  let isEditing = getIsEditing({ id: idFromArgs, collectionSlug, globalSlug })\n\n  // Fetch the doc required for the view\n  let doc =\n    !idFromArgs && !globalSlug\n      ? initialData || null\n      : await getDocumentData({\n          id: idFromArgs,\n          collectionSlug,\n          globalSlug,\n          locale,\n          payload,\n          req,\n          segments,\n          user,\n        })\n\n  if (isEditing && !doc) {\n    // If it's a collection document that doesn't exist, redirect to collection list\n    if (collectionSlug) {\n      const redirectURL = formatAdminURL({\n        adminRoute,\n        path: `/collections/${collectionSlug}?notFound=${encodeURIComponent(idFromArgs)}`,\n        serverURL,\n      })\n      redirect(redirectURL)\n    } else {\n      // For globals or other cases, keep the 404 behavior\n      throw new Error('not-found')\n    }\n  }\n\n  const isTrashedDoc = Boolean(doc && 'deletedAt' in doc && typeof doc?.deletedAt === 'string')\n\n  const [\n    docPreferences,\n    { docPermissions, hasPublishPermission, hasSavePermission },\n    { currentEditor, isLocked, lastUpdateTime },\n    entityPreferences,\n  ] = await Promise.all([\n    // Get document preferences\n    getDocPreferences({\n      id: idFromArgs,\n      collectionSlug,\n      globalSlug,\n      payload,\n      user,\n    }),\n\n    // Get permissions\n    getDocumentPermissions({\n      id: idFromArgs,\n      collectionConfig,\n      data: doc,\n      globalConfig,\n      req,\n    }),\n\n    // Fetch document lock state\n    getIsLocked({\n      id: idFromArgs,\n      collectionConfig,\n      globalConfig,\n      isEditing,\n      req,\n    }),\n\n    // get entity preferences\n    getPreferences<CollectionPreferences>(\n      collectionSlug ? `collection-${collectionSlug}` : `global-${globalSlug}`,\n      payload,\n      req.user.id,\n      req.user.collection,\n    ),\n  ])\n\n  const operation = (collectionSlug && idFromArgs) || globalSlug ? 'update' : 'create'\n\n  const [\n    { hasPublishedDoc, mostRecentVersionIsAutosaved, unpublishedVersionCount, versionCount },\n    { state: formState },\n  ] = await Promise.all([\n    getVersions({\n      id: idFromArgs,\n      collectionConfig,\n      doc,\n      docPermissions,\n      globalConfig,\n      locale: locale?.code,\n      payload,\n      user,\n    }),\n    buildFormState({\n      id: idFromArgs,\n      collectionSlug,\n      data: doc,\n      docPermissions,\n      docPreferences,\n      fallbackLocale: false,\n      globalSlug,\n      locale: locale?.code,\n      operation,\n      readOnly: isTrashedDoc || isLocked,\n      renderAllFields: true,\n      req,\n      schemaPath: collectionSlug || globalSlug,\n      skipValidation: true,\n    }),\n  ])\n\n  const documentViewServerProps: DocumentViewServerPropsOnly = {\n    doc,\n    hasPublishedDoc,\n    i18n,\n    initPageResult,\n    locale,\n    params,\n    payload,\n    permissions,\n    routeSegments: segments,\n    searchParams,\n    user,\n    versions,\n  }\n\n  if (\n    !overrideEntityVisibility &&\n    ((collectionSlug &&\n      !visibleEntities?.collections?.find((visibleSlug) => visibleSlug === collectionSlug)) ||\n      (globalSlug && !visibleEntities?.globals?.find((visibleSlug) => visibleSlug === globalSlug)))\n  ) {\n    throw new Error('not-found')\n  }\n\n  const formattedParams = new URLSearchParams()\n\n  if (collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts) {\n    formattedParams.append('draft', 'true')\n  }\n\n  if (locale?.code) {\n    formattedParams.append('locale', locale.code)\n  }\n\n  const apiQueryParams = `?${formattedParams.toString()}`\n\n  const apiURL = collectionSlug\n    ? `${serverURL}${apiRoute}/${collectionSlug}/${idFromArgs}${apiQueryParams}`\n    : globalSlug\n      ? `${serverURL}${apiRoute}/${globalSlug}${apiQueryParams}`\n      : ''\n\n  let View: ViewToRender = null\n\n  let showHeader = true\n\n  const RootViewOverride =\n    collectionConfig?.admin?.components?.views?.edit?.root &&\n    'Component' in collectionConfig.admin.components.views.edit.root\n      ? collectionConfig?.admin?.components?.views?.edit?.root?.Component\n      : globalConfig?.admin?.components?.views?.edit?.root &&\n          'Component' in globalConfig.admin.components.views.edit.root\n        ? globalConfig?.admin?.components?.views?.edit?.root?.Component\n        : null\n\n  if (RootViewOverride) {\n    View = RootViewOverride\n    showHeader = false\n  } else {\n    ;({ View } = getDocumentView({\n      collectionConfig,\n      config,\n      docPermissions,\n      globalConfig,\n      routeSegments: segments,\n    }))\n  }\n\n  if (!View) {\n    View = NotFoundView\n  }\n\n  /**\n   * Handle case where autoSave is enabled and the document is being created\n   * => create document and redirect\n   */\n  const shouldAutosave =\n    hasSavePermission &&\n    ((collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.autosave) ||\n      (globalConfig?.versions?.drafts && globalConfig?.versions?.drafts?.autosave))\n\n  const validateDraftData =\n    collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.validate\n\n  let id = idFromArgs\n\n  if (shouldAutosave && !validateDraftData && !idFromArgs && collectionSlug) {\n    doc = await payload.create({\n      collection: collectionSlug,\n      data: initialData || {},\n      depth: 0,\n      draft: true,\n      fallbackLocale: false,\n      locale: locale?.code,\n      req,\n      user,\n    })\n\n    if (doc?.id) {\n      id = doc.id\n      isEditing = getIsEditing({ id: doc.id, collectionSlug, globalSlug })\n\n      if (!drawerSlug && redirectAfterCreate !== false) {\n        const redirectURL = formatAdminURL({\n          adminRoute,\n          path: `/collections/${collectionSlug}/${doc.id}`,\n          serverURL,\n        })\n\n        redirect(redirectURL)\n      }\n    } else {\n      throw new Error('not-found')\n    }\n  }\n\n  const documentSlots = renderDocumentSlots({\n    id,\n    collectionConfig,\n    globalConfig,\n    hasSavePermission,\n    permissions: docPermissions,\n    req,\n  })\n\n  // Extract Description from documentSlots to pass to DocumentHeader\n  const { Description } = documentSlots\n\n  const clientProps: DocumentViewClientProps = {\n    formState,\n    ...documentSlots,\n    documentSubViewType,\n    viewType,\n  }\n\n  const { isLivePreviewEnabled, livePreviewConfig, livePreviewURL } = await handleLivePreview({\n    collectionSlug,\n    config,\n    data: doc,\n    globalSlug,\n    operation,\n    req,\n  })\n\n  const { isPreviewEnabled, previewURL } = await handlePreview({\n    collectionSlug,\n    config,\n    data: doc,\n    globalSlug,\n    operation,\n    req,\n  })\n\n  return {\n    data: doc,\n    Document: (\n      <DocumentInfoProvider\n        apiURL={apiURL}\n        collectionSlug={collectionConfig?.slug}\n        currentEditor={currentEditor}\n        disableActions={disableActions ?? false}\n        docPermissions={docPermissions}\n        globalSlug={globalConfig?.slug}\n        hasPublishedDoc={hasPublishedDoc}\n        hasPublishPermission={hasPublishPermission}\n        hasSavePermission={hasSavePermission}\n        id={id}\n        initialData={doc}\n        initialState={formState}\n        isEditing={isEditing}\n        isLocked={isLocked}\n        isTrashed={isTrashedDoc}\n        key={locale?.code}\n        lastUpdateTime={lastUpdateTime}\n        mostRecentVersionIsAutosaved={mostRecentVersionIsAutosaved}\n        redirectAfterCreate={redirectAfterCreate}\n        redirectAfterDelete={redirectAfterDelete}\n        redirectAfterDuplicate={redirectAfterDuplicate}\n        redirectAfterRestore={redirectAfterRestore}\n        unpublishedVersionCount={unpublishedVersionCount}\n        versionCount={versionCount}\n      >\n        <LivePreviewProvider\n          breakpoints={livePreviewConfig?.breakpoints}\n          isLivePreviewEnabled={isLivePreviewEnabled && operation !== 'create'}\n          isLivePreviewing={Boolean(\n            entityPreferences?.value?.editViewType === 'live-preview' && livePreviewURL,\n          )}\n          isPreviewEnabled={Boolean(isPreviewEnabled)}\n          previewURL={previewURL}\n          typeofLivePreviewURL={typeof livePreviewConfig?.url as 'function' | 'string' | undefined}\n          url={livePreviewURL}\n        >\n          {showHeader && !drawerSlug && (\n            <DocumentHeader\n              AfterHeader={Description}\n              collectionConfig={collectionConfig}\n              globalConfig={globalConfig}\n              permissions={permissions}\n              req={req}\n            />\n          )}\n          <HydrateAuthProvider permissions={permissions} />\n          <EditDepthProvider>\n            {RenderServerComponent({\n              clientProps,\n              Component: View,\n              importMap,\n              serverProps: documentViewServerProps,\n            })}\n          </EditDepthProvider>\n        </LivePreviewProvider>\n      </DocumentInfoProvider>\n    ),\n  }\n}\n\nexport async function DocumentView(props: AdminViewServerProps) {\n  try {\n    const { Document: RenderedDocument } = await renderDocument(props)\n    return RenderedDocument\n  } catch (error) {\n    if (error?.message === 'NEXT_REDIRECT') {\n      throw error\n    }\n\n    logError({ err: error, payload: props.initPageResult.req.payload })\n\n    if (error.message === 'not-found') {\n      notFound()\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}